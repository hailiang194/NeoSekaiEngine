# Couldn't automatically generate a config from your source code.
# This is a generic template to serve as a base for your custom config
# See: https://circleci.com/docs/configuration-reference
version: 2.1
jobs:
  build-ubuntu:
    docker:
      - image: ubuntu:20.04
    steps:
      - checkout
      # Replace this with a real test runner invocation
      - run:
          name: setup ubuntu
          command: |
            apt-get update 
            apt-get -y upgrade 
            apt install sudo
      - run:
          name: config tzdata
          command: DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install tzdata
      - run: 
          name: setup library
          command: /bin/bash ./scripts/pre-installer/linux/debian/preinstaller.sh 
          
  test-ubuntu-shared-lib:
    docker:
      - image: ubuntu:20.04
    steps:
      - run:
          name: build project with test for shared lib
          command: cmake -S ./ -B ./build -DRUN_TEST=1 -DBUILD_SHARED_LIBS=1 && cmake --build ./build
      - run:
          name: run test
          command: build/out/engine_test --gtest_output="xml:build/test-results.xml"
      - store_artifacts:
          path: build/test-results.xml
      - store_test_results:
          path: build/test-results.xml
  test-ubuntu-static-lib:
    docker:
      - image: ubuntu:20.04
    steps:
      - run:
          name: build project with test for shared lib
          command: cmake -S ./ -B ./build -DRUN_TEST=1 -DBUILD_SHARED_LIBS=0 && cmake --build ./build
      - run:
          name: run test
          command: build/out/engine_test --gtest_output="xml:build/test-results.xml"
      - store_artifacts:
          path: build/test-results.xml
      - store_test_results:
          path: build/test-results.xml
workflows:
  test-ubuntu:
    jobs:
      - build-ubuntu
      - test-ubuntu-shared-lib:
          requires:
            - build-ubuntu
      - test-ubuntu-static-lib:
          requires:
            - build-ubuntu
